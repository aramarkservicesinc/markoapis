openapi: 3.0.0
info:
  description: |
    This API will return a collection of IoT Data.

    The base endpoint URL for this API in production is: `https://marko.aramark.net/v1/iot`.
    
    For testing the API with the "Try" tool on this page or in your app, use either our testing server "qa-marko" or our development server "dev-marko".
  version: "1.0.0-oas3"
  title: IoT
tags:
  - name: Events
    description: A collection of Event data
paths:
  /events/temperature:
    post:
      summary: Get Temperature Events within 24 hour date range
      description: |
        Returns a collection of Temperature Events
      operationId: getTemperatureEvents
      tags:
        - Events
      parameters:
        #- $ref: '#/components/parameters/sourceSystemParam'
        #- $ref: '#/components/parameters/deviceIdParam'
        #- $ref: '#/components/parameters/startDateTimeParam'
        #- $ref: '#/components/parameters/endDateTimeParam'
        #- $ref: '#/components/parameters/pageParam'
        #- $ref: '#/components/parameters/sizeParam'
        #- $ref: '#/components/parameters/serviceAreaIdParam'
        #- $ref: '#/components/parameters/locationIdParam'
        #- $ref: '#/components/parameters/equipmentTypeParam'
        - $ref: '#/components/parameters/bypassCacheParam'
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_temp_events_body'
      responses:
        '200':
          description: Lists Temperature Events
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'ENUM ''Success'', ''Error'' or ''Not Found'''
                  count:
                    type: number
                    description: Number of records
                  page:
                    type: number
                  size:
                    type: number
                  temperature_events:
                    type: array
                    items:
                      $ref: '#/components/schemas/temperature_events'
        '404':
          description: Requested resource does not exist.
        '405':
          description: HTTP Verb / Operation not supported
  /events/temperature/{org_value}:
    post:
      summary: Get Temperature Events by Location within 24 hour date range
      description: |
        Returns a collection of Temperature Events
      operationId: getTemperatureEventsByOrgValue
      tags:
        - Events
      parameters:
        - $ref: '#/components/parameters/orgValueParam'
        #- $ref: '#/components/parameters/deviceIdParam'
        #- $ref: '#/components/parameters/startDateTimeParam'
        #- $ref: '#/components/parameters/endDateTimeParam'
        #- $ref: '#/components/parameters/pageParam'
        #- $ref: '#/components/parameters/sizeParam'
        #- $ref: '#/components/parameters/bypassCacheParam'
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_temp_events_body'
      responses:
        '200':
          description: Lists Temperature Events
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: 'ENUM ''Success'', ''Error'' or ''Not Found'''
                  count:
                    type: number
                    description: Number of records
                  page:
                    type: number
                  size:
                    type: number
                  temperature_events:
                    type: array
                    items:
                      $ref: '#/components/schemas/temperature_events'
        '404':
          description: Requested resource does not exist.
        '405':
          description: HTTP Verb / Operation not supported
servers:
  - url: https://qa-marko.aramark.net/v1/iot
    description: Testing server
  - url: https://dev-marko.aramark.net/v1/iot
    description: Development server
components:
  parameters:
    orgValueParam:
      name: org_value
      in: path
      description: Location Code of the Device
      required: true
      schema:
        type: string
    deviceIdParam:
      name: device_id
      in: query
      description: ID of the Device. Can be a comma separated list of IDs
      required: false
      schema:
        type: string
    startDateTimeParam:
      name: start_date_time
      in: query
      required: true
      description: Start Datetime of the result set. Must be in 'MM/DD/YYY 24HH:MI' format. Cannot exceed 24 hours maximum range.
      schema: 
        type: string
    endDateTimeParam:
      name: end_date_time
      in: query
      required: true
      description: End Datetime of the result set. Must be in 'MM/DD/YYY 24HH:MI' format. Cannot exceed 24 hours maximum range.
      schema: 
        type: string
    serviceAreaIdParam:
      name: service_area_id
      in: query
      required: false
      description: ENBL ONLY. Service Area ID of the requested result set. Must include Service Area ID or Location ID
      schema:
        type: number
    locationIdParam:
      name: location_id
      in: query
      required: false
      description: ENBL ONLY. Location ID of the requested result set. Must include Service Area ID or Location ID
      schema:
        type: number
    equipmentTypeParam:
      name: equipment_type
      in: query
      required: false
      description: ENBL ONLY. Equipment Type of the requested result set.
      schema:
        type: string
    sourceSystemParam:
      name: source_system
      in: query
      required: true
      description: Source System for the result set
      schema:
        type: string
        enum: ['AIWX','ENBL']
    pageParam:
      name: page
      in: query
      required: false
      description: Size of result set
      schema:
        type: number
        default: 1
    sizeParam:
      name: size
      in: query
      required: false
      description: Page of result set
      schema:
        type: number
        default: 50
    bypassCacheParam:
      in: header
      name: bypass-cache
      description: This HTTP Header variable will bypass cache
      schema:
        type: string
        enum:
          - 'true'
          - 'false'
  securitySchemes:
    apikey:
      type: apiKey
      in: header
      name: apikey
      description: This HTTP Header variable will verify security
  schemas:
    post_temp_events_body:
      type: object
      properties:
        start_date_time:
          type: string
        end_date_time:
          type: string
        page:
          type: number
        size:
          type: number
        device_ids:
          type: object
    temperature_events:
      type: object
      properties:
        device_id:
          type: string
        device_name:
          type: string
        location_org_value:
          type: string
        event_id:
          type: string
        event_date:
          type: string
        event_datetime:
          type: string
        event_datetime_utc:
          type: string
        temp_f:
          type: number
        temp_c:
          type: number
        humidity:
          type: number
        asset_key:
          type: number
        asset_temp_event_f_key:
          type: number
        event_datetime_5min_bucket:
          type: string
        event_datetime_15min_bucket:
          type: string
        event_datetime_hr_bucket:
          type: string
        created_by:
          type: string
        created_datetime:
          type: string
        last_updated_by:
          type: string
        last_updated_datetime:
          type: string