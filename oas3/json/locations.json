{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0-oas3",
        "title": "Locations",
        "description": "\nThis API will return a collection of Locations from either CSP or MDG environments.  Locations is a physical point where Aramark provides services and grouped by Profit Centers.\n\nThe base endpoint URL for this API in production is: `https://marko.aramark.net/v1`.\n\nFor testing the API with the \"Try\" tool on this page or in your app, use either our testing server \"qa-marko\" or our development server \"dev-marko\".\n"
    },
    "security": [
        {
            "apiKey": []
        }
    ],
    "paths": {
        "/locations": {
            "get": {
                "summary": "Locations",
                "description": "\nReturn a collection of locations filtered by a variety of optional query parameters.\n\n![This endpoint is in production](/themes/portal/images/statuspngs/statusprod.png)\n",
                "operationId": "getLocations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/searchParam"
                    },
                    {
                        "$ref": "#/components/parameters/siteIdParam"
                    },
                    {
                        "$ref": "#/components/parameters/profitCenterParam"
                    },
                    {
                        "$ref": "#/components/parameters/locationIdParam"
                    },
                    {
                        "$ref": "#/components/parameters/formatParam"
                    },
                    {
                        "$ref": "#/components/parameters/pageParam"
                    },
                    {
                        "$ref": "#/components/parameters/sizeParam"
                    },
                    {
                        "$ref": "#/components/parameters/bypassCacheParam"
                    },
                    {
                        "$ref": "#/components/parameters/smokeParam"
                    }
                ],
                "tags": [
                    "Locations"
                ],
                "responses": {
                    "200": {
                        "description": "List all Locations.",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "description": "ENUM 'Success', 'Error'",
                                            "default": "Success"
                                        },
                                        "count": {
                                            "type": "string",
                                            "description": "Number of Records returned in request"
                                        },
                                        "page": {
                                            "type": "string",
                                            "description": "Page number of Records set",
                                            "default": "50"
                                        },
                                        "size": {
                                            "type": "string",
                                            "description": "Number of Records to return with result set",
                                            "default": "50"
                                        },
                                        "locations": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/locations"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Requested resource does not exist."
                    },
                    "405": {
                        "description": "HTTP Verb / Operation not supported"
                    }
                }
            }
        }
    },
    "servers": [
        {
            "url": "https://qa-marko.aramark.net/v1",
            "description": "Testing server"
        },
        {
            "url": "https://dev-marko.aramark.net/v1",
            "description": "Development server"
        }
    ],
    "components": {
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "in": "header",
                "name": "apikey",
                "description": "This HTTP Header variable will verify permissions."
            }
        },
        "parameters": {
            "searchParam": {
                "name": "search",
                "in": "query",
                "description": "Search string to find Locations. Searches against Site Name, Profit Center Name, Location Name",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "siteIdParam": {
                "name": "site_id",
                "in": "query",
                "description": "Unique ID of Site to return Locations.",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "profitCenterParam": {
                "name": "profit_center",
                "in": "query",
                "description": "Unique ID of Profit Center to return Locations.",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "locationIdParam": {
                "name": "location_id",
                "in": "query",
                "description": "Unique ID of Location to return a Location.",
                "required": false,
                "schema": {
                    "type": "string"
                }
            },
            "formatParam": {
                "name": "format",
                "in": "query",
                "description": "File format to return data",
                "required": false,
                "schema": {
                    "type": "string",
                    "enum": [
                        "JSON",
                        "XLS",
                        "CSV"
                    ],
                    "default": "JSON"
                }
            },
            "pageParam": {
                "in": "query",
                "name": "page",
                "escription": "Page number of result set",
                "required": false,
                "schema": {
                    "type": "number",
                    "default": 1
                }
            },
            "sizeParam": {
                "name": "size",
                "in": "query",
                "description": "Number of records to be returned in each page of result set",
                "schema": {
                    "type": "string",
                    "default": 50
                }
            },
            "bypassCacheParam": {
                "in": "header",
                "name": "bypass-cache",
                "description": "This HTTP Header variable will bypass cache.",
                "schema": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ],
                    "default": "false"
                }
            },
            "smokeParam": {
                "in": "header",
                "name": "smoke",
                "description": "When set to 'true' this HTTP header variable will route the API call to the Integration testing environment. Only applicable in QA.",
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "locations": {
                "type": "object",
                "properties": {
                    "location_id": {
                        "type": "integer",
                        "description": "Unique code for a Profit Center, sourced by BIC or MDG"
                    },
                    "location": {
                        "type": "string",
                        "description": "Unique code for a Profit Center, sourced by MDG"
                    },
                    "location_name": {
                        "type": "string",
                        "description": "Location descriptive name"
                    },
                    "location_short_name": {
                        "type": "string",
                        "description": "Location descriptive name"
                    },
                    "location_enabled": {
                        "type": "string",
                        "description": "Indicator of whether Profit Center is enabled 'Y/N'"
                    },
                    "service_type": {
                        "type": "string",
                        "description": "GL Code for services provided at locations"
                    },
                    "primary": {
                        "type": "string",
                        "description": "Indicator for whether this is the primary location for Profit Center"
                    },
                    "default_concept": {
                        "type": "string",
                        "description": "GL Code for Brand information"
                    },
                    "profit_center": {
                        "type": "string",
                        "description": "Unique code for a Profit Center, sourced by BIC or MDG"
                    },
                    "profit_center_name": {
                        "type": "string",
                        "description": "Profit Center name"
                    },
                    "site_id": {
                        "type": "integer",
                        "description": "Site ID coming from source system CSP Will be deprecated once MDG application is fully implemented."
                    },
                    "site_no": {
                        "type": "string",
                        "description": "Site No coming from source system CSP"
                    },
                    "site": {
                        "type": "string",
                        "description": "Global Unique identifier coming from MDG system"
                    },
                    "site_name": {
                        "type": "string",
                        "description": "Business name of site"
                    },
                    "create_date": {
                        "type": "string",
                        "description": "Calendar date when Site was created"
                    },
                    "last_update_date": {
                        "type": "string",
                        "description": "Calendar date when Site was last updated"
                    }
                }
            }
        }
    }
}