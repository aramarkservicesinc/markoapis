{
   "openapi": "3.0.0",
   "info": {
      "description": "\nThis API maps Profit Centers or Locations to a user.\n\nThe base endpoint URL for this API in production is: `https://marko.aramark.net/v1/profile/app`.\n\nFor testing the API with the \"Try\" tool on this page or in your app, use either our testing server \"qa-marko\" or our development server \"dev-marko\".\n",
      "version": "1.0.0-oas3",
      "title": "App Profiles"
   },
   "tags": [
      {
         "name": "Locations"
      },
      {
         "name": "Profit Centers"
      }
   ],
   "paths": {
      "/my_profit_centers": {
         "get": {
            "summary": "Map profit centers to user",
            "description": "\nReturn a collection of Profit Centers to which a user is mapped.\n\n![This endpoint is in development](/themes/portal/images/statuspngs/statusdev.png)\n",
            "operationId": "getMyAppProfitCenters",
            "parameters": [
               {
                  "$ref": "#/components/parameters/searchParam"
               },
               {
                  "$ref": "#/components/parameters/segmentCategoryParam"
               },
               {
                  "$ref": "#/components/parameters/pageParam"
               },
               {
                  "$ref": "#/components/parameters/sizeParam"
               },
               {
                  "$ref": "#/components/parameters/bypassCacheParam"
               },
               {
                  "$ref": "#/components/parameters/smokeParam"
               }
            ],
            "tags": [
               "Profit Centers"
            ],
            "responses": {
               "200": {
                  "description": "List all Profit Centers.",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "status": {
                                 "type": "string",
                                 "description": "ENUM 'Success' or 'Error'",
                                 "default": "Success"
                              },
                              "count": {
                                 "type": "string",
                                 "description": "Number of records returned in request"
                              },
                              "page": {
                                 "type": "string",
                                 "description": "Page number of result set",
                                 "default": "1"
                              },
                              "size": {
                                 "type": "string",
                                 "description": "Number of records returned with the result set",
                                 "default": "50"
                              },
                              "profit_centers": {
                                 "type": "array",
                                 "items": {
                                    "$ref": "#/components/schemas/profit_centers"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "404": {
                  "description": "Requested resource does not exist."
               },
               "405": {
                  "description": "HTTP Verb / Operation not supported"
               }
            }
         }
      },
      "/my_locations": {
         "get": {
            "summary": "Map locations to user",
            "description": "\nReturn a collection of Locations to which a user is mapped.\n\n![This endpoint is in development](/themes/portal/images/statuspngs/statusdev.png)\n",
            "operationId": "getMyAppLocations",
            "parameters": [
               {
                  "$ref": "#/components/parameters/searchParam"
               },
               {
                  "$ref": "#/components/parameters/segmentCategoryParam"
               },
               {
                  "$ref": "#/components/parameters/statusParam"
               },
               {
                  "$ref": "#/components/parameters/pageParam"
               },
               {
                  "$ref": "#/components/parameters/sizeParam"
               },
               {
                  "$ref": "#/components/parameters/bypassCacheParam"
               },
               {
                  "$ref": "#/components/parameters/smokeParam"
               }
            ],
            "tags": [
               "Locations"
            ],
            "responses": {
               "200": {
                  "description": "List all Locations.",
                  "content": {
                     "*/*": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "status": {
                                 "type": "string",
                                 "description": "ENUM 'Success' or 'Error'",
                                 "default": "Success"
                              },
                              "count": {
                                 "type": "string",
                                 "description": "Number of records returned in request"
                              },
                              "page": {
                                 "type": "string",
                                 "description": "Page number of result set",
                                 "default": "1"
                              },
                              "size": {
                                 "type": "string",
                                 "description": "Number of records returned with the result set",
                                 "default": "50"
                              },
                              "locations": {
                                 "type": "array",
                                 "items": {
                                    "$ref": "#/components/schemas/locations"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "404": {
                  "description": "Requested resource does not exist."
               },
               "405": {
                  "description": "HTTP Verb / Operation not supported"
               }
            }
         }
      }
   },
   "servers": [
      {
         "url": "https://dev-marko.aramark.net/v1/profile/app",
         "description": "Development server"
      },
      {
         "url": "https://qa-marko.aramark.net/v1/profile/app",
         "description": "Testing server"
      }
   ],
   "components": {
      "parameters": {
         "searchParam": {
            "name": "search",
            "in": "query",
            "description": "Search string to find Profit Centers",
            "required": false,
            "schema": {
               "type": "string"
            }
         },
         "segmentCategoryParam": {
            "name": "segment_category",
            "in": "query",
            "description": "Identifier of different financial groupings",
            "required": false,
            "schema": {
               "type": "string",
               "enum": [
                  "OPERATIONAL",
                  "OVERHEAD",
                  "NVD",
                  "LOST",
                  "ALL",
                  "ALL_CLOSED"
               ],
               "default": "OPERATIONAL"
            }
         },
         "statusParam": {
            "name": "status",
            "in": "query",
            "description": "Indicator if the Location is active or not. A-Active, X-Inactive",
            "required": false,
            "schema": {
               "type": "string",
               "enum": [
                  "A",
                  "X"
               ]
            }
         },
         "pageParam": {
            "in": "query",
            "name": "page",
            "description": "Page number of result set",
            "required": false,
            "schema": {
               "type": "number",
               "default": 1
            }
         },
         "sizeParam": {
            "in": "query",
            "name": "size",
            "description": "Number of rows in each page to return.",
            "required": false,
            "schema": {
               "type": "string",
               "default": 50
            }
         },
         "bypassCacheParam": {
            "in": "header",
            "name": "bypass-cache",
            "description": "This HTTP Header variable will bypass cache.",
            "schema": {
               "type": "string",
               "enum": [
                  "true",
                  "false"
               ],
               "default": "false"
            }
         },
         "smokeParam": {
            "in": "header",
            "name": "smoke",
            "description": "When set to 'true' this HTTP header variable will route the API call to the Integration testing environment.  Only applicable in QA.",
            "schema": {
               "type": "string",
               "default": false
            }
         }
      },
      "securitySchemes": {
         "apiKey": {
            "type": "apiKey",
            "in": "header",
            "name": "apikey",
            "description": "This HTTP Header variable will verify permissions."
         }
      },
      "schemas": {
         "profit_centers": {
            "type": "object",
            "properties": {
               "profit_center": {
                  "type": "string",
                  "description": "Unique code for a Profit Center, sourced by BIC or MDG"
               },
               "profit_center_name": {
                  "type": "string",
                  "description": "Profit Center name"
               },
               "segment_category": {
                  "type": "string",
                  "description": "category of segmentation"
               },
               "segment": {
                  "type": "string",
                  "description": "detailed segmentation group"
               }
            }
         },
         "locations": {
            "type": "object",
            "properties": {
               "location": {
                  "type": "string",
                  "description": "Unique code for a Profit Center, sourced by BIC or MDG"
               },
               "location_name": {
                  "type": "string",
                  "description": "Profit Center name"
               },
               "profit_center": {
                  "type": "string",
                  "description": "Unique code for a Profit Center, sourced by BIC or MDG"
               },
               "profit_center_name": {
                  "type": "string",
                  "description": "Profit Center name"
               },
               "segment_category": {
                  "type": "string",
                  "description": "category of segmentation"
               },
               "segment": {
                  "type": "string",
                  "description": "detailed segmentation group"
               },
               "service_type": {
                  "type": "string",
                  "description": "Indicator of the type of service provided at the location"
               },
               "status": {
                  "type": "string",
                  "description": "The status of the Location. A-Active, X-Inactive"
               },
               "status_description": {
                  "type": "string",
                  "description": "Description of the Location Status"
               }
            }
         }
      }
   }
}