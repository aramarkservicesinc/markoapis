{
   "openapi": "3.0.0",
   "info": {
      "description": "This API will return a collection of Service Inventory Data Location.\n\nThe base endpoint URL for this API in production is: `https://marko.aramark.net/v1/inventory`.\n\nFor testing the API with the \"Try\" tool on this page or in your app, use either our testing server \"qa-marko\" or our development server \"dev-marko\".\n",
      "version": "1.0.0-oas3",
      "title": "Inventory"
   },
   "tags": [
      {
         "name": "Storage",
         "description": "A collection of Storage Areas for a Location"
      }
   ],
   "paths": {
      "/storage_areas": {
         "get": {
            "summary": "Inventory Storage Areas",
            "description": "Returns a Hierarchal collection of Inventory Storage Areas for a specific location\n",
            "operationId": "getInventoryStorage",
            "tags": [
               "Storage"
            ],
            "parameters": [
               {
                  "$ref": "#/components/parameters/locationIdParam"
               },
               {
                  "$ref": "#/components/parameters/sourceSystemParam"
               },
               {
                  "$ref": "#/components/parameters/bypassCacheParam"
               },
               {
                  "$ref": "#/components/parameters/smokeParam"
               }
            ],
            "responses": {
               "200": {
                  "description": "All Inventory Storage Areas for a specific Location",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "status": {
                                 "type": "string",
                                 "description": "ENUM 'Success', 'Error' or 'Not Found'"
                              },
                              "count": {
                                 "type": "string",
                                 "description": "Number of records"
                              },
                              "storage_areas": {
                                 "type": "array",
                                 "items": {
                                    "$ref": "#/components/schemas/storage_areas"
                                 }
                              }
                           }
                        }
                     }
                  }
               },
               "404": {
                  "description": "Requested resource does not exist."
               },
               "405": {
                  "description": "HTTP Verb / Operation not supported"
               }
            }
         }
      },
      "/items": {
         "put": {
            "summary": "Update an Inventory Items",
            "description": "Allows updates to Inventory Items\n",
            "operationId": "putInventoryItems",
            "tags": [
               "Items"
            ],
            "parameters": [
               {
                  "$ref": "#/components/parameters/sourceSystemParam"
               }
            ],
            "requestBody": {
               "description": "Details for the Item that is being updated",
               "required": true,
               "content": {
                  "application/json": {
                     "schema": {
                        "$ref": "#/components/schemas/putItemBody"
                     }
                  }
               }
            },
            "responses": {
               "200": {
                  "description": "Status of the Update Request",
                  "content": {
                     "application/json": {
                        "schema": {
                           "type": "object",
                           "properties": {
                              "status": {
                                 "type": "string",
                                 "description": "ENUM 'Success', 'Error' or 'Not Found'"
                              },
                              "message": {
                                 "type": "string",
                                 "description": "Status Message for the Update Request"
                              }
                           }
                        }
                     }
                  }
               },
               "404": {
                  "description": "Requested resource does not exist."
               },
               "405": {
                  "description": "HTTP Verb / Operation not supported"
               }
            }
         }
      }
   },
   "servers": [
      {
         "url": "https://qa-marko.aramark.net/v1/service",
         "description": "Testing server"
      },
      {
         "url": "https://dev-marko.aramark.net/v1/service",
         "description": "Development server"
      }
   ],
   "components": {
      "parameters": {
         "locationIdParam": {
            "name": "location_id",
            "in": "query",
            "description": "ID of the Location",
            "required": true,
            "schema": {
               "type": "number"
            }
         },
         "sourceSystemParam": {
            "name": "source_system",
            "in": "query",
            "description": "Inventory source system",
            "required": true,
            "schema": {
               "type": "string",
               "enum": [
                  "PRMA"
               ]
            }
         },
         "inventoryItemIdParam": {
            "name": "inventory_item_id",
            "in": "path",
            "description": "ID of the Inventory Item to be udpated",
            "required": true,
            "schema": {
               "type": "number"
            }
         },
         "bypassCacheParam": {
            "in": "header",
            "name": "bypass-cache",
            "description": "This HTTP Header variable will bypass cache",
            "schema": {
               "type": "string",
               "enum": [
                  "true",
                  "false"
               ]
            }
         },
         "smokeParam": {
            "in": "header",
            "name": "smoke",
            "description": "When set to 'true' this HTTP Header variable will route to the Integration environment.  Only applicable in QA Server.\n",
            "schema": {
               "type": "string",
               "enum": [
                  "true",
                  "false"
               ]
            }
         }
      },
      "securitySchemes": {
         "apikey": {
            "type": "apiKey",
            "in": "header",
            "name": "apikey",
            "description": "This HTTP Header variable will verify security"
         }
      },
      "schemas": {
         "putItemBody": {
            "type": "object",
            "properties": {
               "inventory_item_id": {
                  "type": "number",
                  "description": "Inventory Item ID"
               },
               "actual_unit1_value": {
                  "type": "number",
                  "description": "Actual Unit1 Value for the Item"
               },
               "actual_unit2_value": {
                  "type": "number",
                  "description": "Actual Unit2 Value for the Item"
               },
               "actual_unit3_value": {
                  "type": "number",
                  "description": "Actual Unit3 Value for the Item"
               },
               "fiscal_time_period_id": {
                  "type": "number",
                  "description": "Fiscal Period ID in which the Item is being updated"
               }
            }
         },
         "storage_areas": {
            "type": "object",
            "properties": {
               "storage_area_id": {
                  "type": "number",
                  "description": "ID of the Storage Area"
               },
               "site_id": {
                  "type": "number",
                  "description": "Site ID for the Storage Area"
               },
               "description": {
                  "type": "string",
                  "description": "Name of the Storage Area"
               },
               "location_id": {
                  "type": "number",
                  "description": "Location ID for the Storage Area"
               },
               "storage_area_order": {
                  "type": "number",
                  "description": "Sort Order of the Storage Area"
               },
               "storage_area_level": {
                  "type": "number",
                  "description": "Level of the Storage Area"
               },
               "level1": {
                  "type": "number",
                  "description": "Level 1 Storage Area ID"
               },
               "level2": {
                  "type": "number",
                  "description": "Level 2 Storage Area ID"
               },
               "level3": {
                  "type": "number",
                  "description": "Level 3 Storage Area ID"
               }
            }
         }
      }
   }
}