swagger: "2.0"
info:
  description: This API will return, update, or delete Marko User data
  version: 1.0.0
  title: Marko
host: qa-marko.aramark.net
basePath: /v1/marko
schemes:
- https
securityDefinitions:
  apikey:
    type: apiKey
    in: header
    name: apikey
    description: This HTTP Header variable will verify security
parameters:
  bypassCacheParam:
    in: header
    name: bypass-cache
    type: string
    description: This HTTP Header variable will bypass cache
    enum: ['true','false']
    default: 'false'
  smokeParam:
    in: header
    name: smoke
    type: string
    description: When set to 'true' this HTTP Header variable will route to the Integration environment.  Only applicable in QA Server
    enum: ['true','false']
    default: 'false'
  userIdParamFalse:
    name: user_id
    in: query
    type: string
    description: Unique identifier of a Marko User.  Used for returning specific user, otherwise returns all users
    required: false
  userIdParamTrue:
    name: user_id
    in: query
    type: string
    description: Unique identifier of a Marko User.  Used for returning specific user, otherwise returns all users
    required: true
  profileIdParamFalse:
    in: query 
    name: profile_id        
    type: string
    description: Unique identifier of a user Profile
    required: false
  profileIdParamTrue:
    in: query 
    name: profile_id        
    type: string
    description: Unique identifier of a user Profile
    required: true
  deviceIdParamFalse:
    in: query 
    name: device_id        
    type: string
    description: Unique identifier of a user Device. Used for returning specific device, otherwise returns all devices
    required: false
  deviceIdParamTrue:
    in: query 
    name: device_id        
    type: string
    description: Unique identifier of a user Device. Used for returning specific device, otherwise returns all devices
    required: true
  setIdParamFalse:
    in: query 
    name: set_id        
    type: string
    description: Unique identifier of a user Set. Used for returning specific set, otherwise returns all set
    required: false
  setIdParamTrue:
    in: query 
    name: set_id        
    type: string
    description: Unique identifier of a user Set. Used for returning specific set, otherwise returns all set
    required: true
tags:
- name: User
  description: Gets, Updates or Creates Marko User information
- name: Profile
  description: Gets, Updates, Creates or Removes Marko Profile information
- name: Device
  description: Gets, Updates, Creates or Removes Marko Profile Device information
- name: Set
  description: Gets, Updates, Creates or Removes Marko Profile Set information
- name: Anet
  description: Gets the current list of ANET Users
paths:
  /users:
    get:
      summary: Get all Users
      description: Returns All Marko Users
      operationId: getAllMarkoUsers
      tags:
        - User
      produces:
      - application/json
      parameters:
        - $ref: "#/parameters/userIdParamFalse"
        - $ref: "#/parameters/bypassCacheParam"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              user_details:
                type: array
                items:
                  $ref: "#/definitions/User"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
    post:
      summary: Create User
      tags:
        - User
      description: Creates Marko User 
      operationId: postUser
      parameters:
        - $ref: "#/parameters/userIdParamTrue"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: Details of the User
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              user_details:
                type: array
                items:
                  $ref: "#/definitions/User"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
  /user/profile:
    get:
      summary: Get User Profiles
      description: Returns Marko User Profiles
      operationId: getUserProfiles
      tags:
        - Profile
      produces:
      - application/json
      parameters:
        - $ref: "#/parameters/profileIdParamFalse"
        - $ref: "#/parameters/bypassCacheParam"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: Provides a list of Profiles
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              profile_details:
                type: array
                items:
                  $ref: "#/definitions/User"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
    post:
      summary: Create User Profile
      tags:
        - Profile
      description: Creates Marko User Profile
      operationId: postUserProfile
      parameters:
        - $ref: "#/parameters/profileIdParamFalse"
        - $ref: "#/parameters/bypassCacheParam"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: User Profile
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              profile_details:
                type: array
                items:
                  $ref: "#/definitions/Profile"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
    delete:
      summary: Remove Profile
      tags:
        - Profile
      operationId: deleteUserProfile
      parameters:
        - $ref: "#/parameters/profileIdParamTrue"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: OK
          schema:
            type: object
        400:
          description: Bad Request
  /user/device:
    get:
      summary: Get User Devices
      description: Returns Marko User Devices
      operationId: getUserDevices
      tags:
        - Device
      produces:
      - application/json
      parameters:
        - $ref: "#/parameters/deviceIdParamFalse"
        - $ref: "#/parameters/userIdParamFalse"
        - $ref: "#/parameters/bypassCacheParam"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: Provides a list of User Devices
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              device_details:
                type: array
                items:
                  $ref: "#/definitions/Device"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
    post:
      summary: Create User Device
      tags:
        - Device
      description: Creates Marko User Device
      operationId: postUserDevice
      parameters:
        - $ref: "#/parameters/deviceIdParamTrue"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: Creates a User Device
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              device_details:
                type: array
                items:
                  $ref: "#/definitions/Device"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
    delete:
      summary: Remove User Device
      tags:
        - Device
      operationId: deleteUserDevice
      parameters:
        - $ref: "#/parameters/deviceIdParamTrue"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: OK
          schema:
            type: object
        400:
          description: Bad Request
  /user/set:
    get:
      summary: Get User Set
      description: Returns Marko User Profile Set
      operationId: getUserProfileSet
      tags:
        - Set
      produces:
      - application/json
      parameters:
        - $ref: "#/parameters/setIdParamFalse"
        - $ref: "#/parameters/userIdParamFalse"
        - $ref: "#/parameters/bypassCacheParam"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              set_details:
                type: array
                items:
                  $ref: "#/definitions/Set"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
    post:
      summary: Create User Set
      tags:
        - Set
      description: Creates Marko User Profile
      operationId: postUserProfileSet
      parameters:
        - $ref: "#/parameters/setIdParamTrue"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              set_details:
                type: array
                items:
                  $ref: "#/definitions/Set"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
    delete:
      summary: Remove User Set
      tags:
        - Set
      operationId: deleteUserProfileSet
      parameters:
        - $ref: "#/parameters/setIdParamTrue"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: OK
          schema:
            type: object
        400:
          description: Bad Request
  /user/set/value:
    post:
      summary: Create User Set Value
      tags:
        - Set
      description: Creates Marko User Set Value
      operationId: postUserProfileSetValue
      parameters:
        - $ref: "#/parameters/setIdParamTrue"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: Create a new Set Value
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              set_values:
                type: array
                items:
                  $ref: "#/definitions/Set"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
    delete:
      summary: Remove User Set Value
      tags:
        - Set
      operationId: deleteUserProfileSet Value
      parameters:
        - $ref: "#/parameters/setIdParamTrue"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: OK
          schema:
            type: object
        400:
          description: Bad Request
  /anet/users:
    get:
      summary: Get Anet Users
      description: Returns list of ANET Users
      operationId: getAnetUsers
      tags:
        - Anet
      produces:
      - application/json
      parameters:
        - name: employee_id
          in: query
          type: string
          description: unique ID of the employee
        - name: email
          in: query
          type: string
          description: email address of the employee
        - name: size
          in: query
          type: number
          description: number of records returned in one call
          default: 50
        - name: page
          in: query
          type: number
          description: page number of the result set to return
          default: 1
        - $ref: "#/parameters/bypassCacheParam"
        - $ref: "#/parameters/smokeParam"
      responses:
        200:
          description: Provides a list of ANET Users
          schema:
            type: object
            properties:
              status:
                type: string
                description: ENUM 'Success', 'Error' or 'Not Found'
                default: Success
                example: "Success"
              count:
                type: string
                description: Number of records returned 
                default: '0'
                example: "1"
              # Reference to a Schema Object described in 'definitions' section
              device_details:
                type: array
                items:
                  $ref: "#/definitions/Anet_User"
        404:
          description: Not Found
        405:
          description: Method Not Allowed
definitions:
  User:
    type: object
    properties:
      user_id:
        type: string
        description: Unique identifier of a user
      first_name:
        type: string
        description: user first name
      last_name:
        type: string
        description: user last name
      name:
        type: string
        description: user name
      email:
        type: string
        description: email address of a user
      cell_number:
        type: string
        description: cell phone number of a user
      valid:
        type: string
        description: boolean determining validity of device
      create_date:
        type: string
        description: date that profile was created
      update_date:
        type: string
        description: date that profile was last updated
  Profile:
    type: object
    properties:
      profile_id:
        type: string
        description: Unique identifier of a profile
      profile_name:
        type: string
        description: name of a profile
      profile_type:
        type: string
        description: type of profile
      user_id:
        type: string
        description: Unique identifier of a user associated with profile
      valid:
        type: string
        description: boolean determining validity of profile
      create_date:
        type: string
        description: date that profile was created
      update_date:
        type: string
        description: date that profile was last updated
  Device:
    type: object
    properties:
      device_id:
        type: string
        description: Unique identifier of a device
      device_number:
        type: string
        description: number for a device
      phone_number:
        type: string
        description: phone number associated with a device
      profile_id:
        type: string
        description: Unique identifier of a profile
      valid:
        type: string
        description: boolean determining validity of device
      create_date:
        type: string
        description: date that profile was created
      update_date:
        type: string
        description: date that profile was last updated
  Set:
    type: object
    properties:
      set_id:
        type: string
        description: Unique identifier of a set
      set_name:
        type: string
        description: name of a set
      profile_id:
        type: string
        description: Unique identifier of a profile
      status:
        type: string
        description: ENUM describing what action needs to be taken on set
      create_date:
        type: string
        description: date that profile was created
      update_date:
        type: string
        description: date that profile was last updated
  Anet_User:
    type: object
    properties:
      guid:
        type: string
        description: global user identifier for a user
      upn:
        type: string
        description: universal person name for a user
      email:
        type: string
        description: email address of a user
      first_name: 
        type: string
        description: first name of a user
      last_name: 
        type: string
        description: last name of a user
      display_name: 
        type: string
        description: display name for a user
      employee_id:
        type: string
        description: unique ID of the employee